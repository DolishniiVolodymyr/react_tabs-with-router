{"version":3,"sources":["components/Navigation/Navigation.tsx","components/tabs.ts","components/TabsPage/TabsPage.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Navigation","className","to","isActive","classNames","tabs","id","title","content","TabsPage","useParams","tabId","isSelected","find","tab","map","HomePage","NotFoundPage","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"gPAGaA,EAAa,WACxB,OACE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OACTC,IAAW,cAAe,CAAE,YAAaD,KAH7C,kBAQA,cAAC,IAAD,CACED,GAAG,QACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OACTC,IAAW,cAAe,CAAE,YAAaD,KAH7C,0BCnBGE,EAAO,CAClB,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBCC7BC,EAAW,WACtB,MAAsBC,cAAdC,aAAR,MAAgB,EAAhB,EACMC,EAAaP,EAAKQ,MAAK,SAAAC,GAAG,OAAIA,EAAIR,KAAOK,KAE/C,OACE,qCACE,oBAAIV,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGI,EAAKU,KAAI,SAAAD,GAAG,OACX,oBACE,UAAQ,MACRb,UAAWG,IAAW,CACpB,YAAaQ,GACVA,EAAWN,KAAOQ,EAAIR,KAJ7B,SAQE,cAAC,IAAD,CAAMJ,GAAE,gBAAWY,EAAIR,IAAvB,SACGQ,EAAIP,SAHFO,EAAIR,WAUjB,qBAAKL,UAAU,QAAQ,UAAQ,aAA/B,SACGW,EACGA,EAAWJ,QACX,4BClCCQ,EAAW,WACtB,OACE,oBAAIf,UAAU,QAAd,wBCFSgB,EAAe,WAC1B,OACE,oBAAIhB,UAAU,QAAd,6BCOSiB,EAAM,kBACjB,qCAEE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUlB,GAAG,QACzC,eAAC,IAAD,CAAOiB,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAEhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,aChB/BE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dbf1f621.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navigation = () => {\n  return (\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => (\n              classNames('navbar-item', { 'is-active': isActive })\n            )}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/tabs\"\n            className={({ isActive }) => (\n              classNames('navbar-item', { 'is-active': isActive })\n            )}\n          >\n            Tabs\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n","import { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { tabs } from '../tabs';\n\nexport const TabsPage = () => {\n  const { tabId = 0 } = useParams();\n  const isSelected = tabs.find(tab => tab.id === tabId);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              className={classNames({\n                'is-active': isSelected\n                && isSelected.id === tab.id,\n              })}\n              key={tab.id}\n            >\n              <Link to={`/tabs/${tab.id}`}>\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {isSelected\n          ? isSelected.content\n          : 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { TabsPage } from './components/TabsPage';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const App = () => (\n  <>\n    {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n    <Navigation />\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"home\" element={<Navigate to=\"/\" />} />\n      <Route path=\"tabs\">\n        <Route index element={<TabsPage />} />\n        <Route path=\":tabId\" element={<TabsPage />} />\n      </Route>\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n\n    {/* <div className=\"section\">\n      <div className=\"container\">\n\n        <h1 className=\"title\">Tabs page</h1>\n\n        <div className=\"tabs is-boxed\">\n          <ul>\n            <li data-cy=\"Tab\" className=\"is-active\">\n              <a href=\"#/\">Tab 1</a>\n            </li>\n            <li data-cy=\"Tab\">\n              <a href=\"#/\">Tab 2</a>\n            </li>\n            <li data-cy=\"Tab\">\n              <a href=\"#/\">Tab 3</a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          Please select a tab\n        </div>\n      </div>\n    </div> */}\n  </>\n);\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}